builddir = build
cc = clang
cxx = clang++
ld = clang

commonflags = $
  -g $
  -Wall $
  -Wextra $
  -Werror $
  -Wshadow $
  -Wconversion $
  -Wsign-conversion $
  -Wno-unused-parameter $
  -Wno-error=deprecated-declarations $
  -I./deps/glad/include

cxxflags = $
  -std=c++17 $
  -stdlib=libc++ $
  
ldflags = $
  -lglfw $
  -framework CoreVideo $
  -framework OpenGL $
  -framework IOKit $
  -framework Cocoa $
  -framework Carbon $


rule cc
  command = $cc -MMD -MF $out.d -c $commonflags $in -o $out
  depfile = $out.d
  description = compile $in

rule cxx
  command = $cxx -MMD -MF $out.d -c $commonflags $cxxflags $in -o $out
  depfile = $out.d
  description = compile $in

rule link
  command = $ld $ldflags $in -o $out

rule cc_database
  command = ninja -t compdb > $out
  description = generating compile database

build build/compile_commands.json: cc_database | build.ninja

build build/main.o: cxx main.cpp
build build/glad.o: cc deps/glad/glad.c
build build/main: link build/main.o build/glad.o

default build/main build/compile_commands.json
